# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: steammessages_cloud.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import steam.protobufs.steammessages_base_pb2 as steammessages__base__pb2
import steam.protobufs.steammessages_unified_base_pb2 as steammessages__unified__base__pb2
import steam.protobufs.enums_pb2 as enums__pb2
import steam.protobufs.steammessages_client_objects_pb2 as steammessages__client__objects__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19steammessages_cloud.proto\x1a\x18steammessages_base.proto\x1a steammessages_unified_base.proto\x1a\x0b\x65nums.proto\x1a\"steammessages_client_objects.proto\"=\n(CCloud_ClientLogUploadCheck_Notification\x12\x11\n\tclient_id\x18\x01 \x01(\x04\"T\n+CCloud_ClientLogUploadComplete_Notification\x12\x11\n\tclient_id\x18\x01 \x01(\x04\x12\x12\n\nrequest_id\x18\x02 \x01(\x04\"d\n\"CCloud_GetUploadServerInfo_Request\x12>\n\x05\x61ppid\x18\x01 \x01(\rB/\x82\xb5\x18+App ID to which a file will be uploaded to.\"9\n#CCloud_GetUploadServerInfo_Response\x12\x12\n\nserver_url\x18\x01 \x01(\t\"\x8d\x07\n\x1e\x43\x43loud_BeginHTTPUpload_Request\x12?\n\x05\x61ppid\x18\x01 \x01(\rB0\x82\xb5\x18,App ID for which the file is being uploaded.\x12\x33\n\tfile_size\x18\x02 \x01(\rB \x82\xb5\x18\x1cOriginal file size in bytes.\x12=\n\x08\x66ilename\x18\x03 \x01(\tB+\x82\xb5\x18\'Name of the file to store in the cloud.\x12V\n\x08\x66ile_sha\x18\x04 \x01(\tBD\x82\xb5\x18@Hex string (40 digits) representing the SHA1 digest of the file.\x12\\\n\tis_public\x18\x05 \x01(\x08\x42I\x82\xb5\x18\x45True if the file should be marked public on the UFS, false otherwise.\x12\x97\x01\n\x11platforms_to_sync\x18\x06 \x03(\tB|\x82\xb5\x18xArray of string specifying which platforms to sync; value values: all, Windows, MacOS, linux, Switch, iPhoneOS, Android.\x12r\n\x15request_headers_names\x18\x07 \x03(\tBS\x82\xb5\x18ONames for headers you\'ll want to set on your upload request. May be left blank.\x12\x96\x01\n\x16request_headers_values\x18\x08 \x03(\tBv\x82\xb5\x18rValues for headers you\'ll want to set on your upload request. The number of names must equal the number of values.\x12Y\n\x0fupload_batch_id\x18\t \x01(\x04\x42@\x82\xb5\x18<ID of this batch returned by prior BeginAppUploadBatch call.\"\x98\x04\n\x1f\x43\x43loud_BeginHTTPUpload_Response\x12/\n\x05ugcid\x18\x01 \x01(\x06\x42 \x82\xb5\x18\x1cUGC ID of the uploaded file.\x12\x30\n\ttimestamp\x18\x02 \x01(\x07\x42\x1d\x82\xb5\x18\x19Server timestamp of file.\x12X\n\x08url_host\x18\x03 \x01(\tBF\x82\xb5\x18\x42Host name of server to which file should be uploaded via HTTP PUT.\x12O\n\x08url_path\x18\x04 \x01(\tB=\x82\xb5\x18\x39Relative path on server to which file should be uploaded.\x12>\n\tuse_https\x18\x05 \x01(\x08\x42+\x82\xb5\x18\'If true, use https, otherwise use http.\x12{\n\x0frequest_headers\x18\x06 \x03(\x0b\x32,.CCloud_BeginHTTPUpload_Response.HTTPHeadersB4\x82\xb5\x18\x30Name-value pairs to be sent in HTTP PUT request.\x1a*\n\x0bHTTPHeaders\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xad\x04\n\x1f\x43\x43loud_CommitHTTPUpload_Request\x12\xa4\x01\n\x12transfer_succeeded\x18\x01 \x01(\x08\x42\x87\x01\x82\xb5\x18\x82\x01True if the HTTP PUT to the upload URL succeeded (URL provided in response to Cloud.BeginHTTPUpload), false if a failure occurred.\x12x\n\x05\x61ppid\x18\x02 \x01(\rBi\x82\xb5\x18\x65\x41pp ID for which the file is being uploaded. Must match the app ID provided to Cloud.BeginHTTPUpload.\x12\x95\x01\n\x08\x66ile_sha\x18\x03 \x01(\tB\x82\x01\x82\xb5\x18~Hex string (40 digits) representing the SHA1 digest of the file. Must match the SHA1 digest provided to Cloud.BeginHTTPUpload.\x12Q\n\x08\x66ilename\x18\x04 \x01(\tB?\x82\xb5\x18;Filename as specified in the Cloud.BeginHTTPUpload request.\"}\n CCloud_CommitHTTPUpload_Response\x12Y\n\x0e\x66ile_committed\x18\x01 \x01(\x08\x42\x41\x82\xb5\x18=True if the file was successfully committed, false otherwise.\"\xb5\x02\n\x1d\x43\x43loud_BeginUGCUpload_Request\x12.\n\x05\x61ppid\x18\x01 \x01(\rB\x1f\x82\xb5\x18\x1b\x41pp ID this UGC belongs to.\x12*\n\tfile_size\x18\x02 \x01(\rB\x17\x82\xb5\x18\x13\x46ile size in bytes.\x12\'\n\x08\x66ilename\x18\x03 \x01(\tB\x15\x82\xb5\x18\x11Name of the file.\x12V\n\x08\x66ile_sha\x18\x04 \x01(\tBD\x82\xb5\x18@Hex string (40 digits) representing the SHA1 digest of the file.\x12\x37\n\x0c\x63ontent_type\x18\x05 \x01(\tB!\x82\xb5\x18\x1dMIME content type of the file\"\xa0\x05\n\x1e\x43\x43loud_BeginUGCUpload_Response\x12\x87\x01\n\x0estorage_system\x18\x01 \x01(\x0e\x32\x1c.EPublishedFileStorageSystem:$k_EPublishedFileStorageSystemInvalidB+\x82\xb5\x18\'UGC Storage system chosen for this file\x12/\n\x05ugcid\x18\x02 \x01(\x06\x42 \x82\xb5\x18\x1cUGC ID of the uploaded file.\x12\x30\n\ttimestamp\x18\x03 \x01(\x07\x42\x1d\x82\xb5\x18\x19Server timestamp of file.\x12X\n\x08url_host\x18\x04 \x01(\tBF\x82\xb5\x18\x42Host name of server to which file should be uploaded via HTTP PUT.\x12O\n\x08url_path\x18\x05 \x01(\tB=\x82\xb5\x18\x39Relative path on server to which file should be uploaded.\x12>\n\tuse_https\x18\x06 \x01(\x08\x42+\x82\xb5\x18\'If true, use https, otherwise use http.\x12z\n\x0frequest_headers\x18\x07 \x03(\x0b\x32+.CCloud_BeginUGCUpload_Response.HTTPHeadersB4\x82\xb5\x18\x30Name-value pairs to be sent in HTTP PUT request.\x1a*\n\x0bHTTPHeaders\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xf0\x02\n\x1e\x43\x43loud_CommitUGCUpload_Request\x12\xa3\x01\n\x12transfer_succeeded\x18\x01 \x01(\x08\x42\x86\x01\x82\xb5\x18\x81\x01True if the HTTP PUT to the upload URL succeeded (URL provided in response to Cloud.BeginUGCUpload), false if a failure occurred.\x12w\n\x05\x61ppid\x18\x02 \x01(\rBh\x82\xb5\x18\x64\x41pp ID for which the file is being uploaded. Must match the app ID provided to Cloud.BeginUGCUpload.\x12/\n\x05ugcid\x18\x03 \x01(\x06\x42 \x82\xb5\x18\x1cUGC ID of the uploaded file.\"|\n\x1f\x43\x43loud_CommitUGCUpload_Response\x12Y\n\x0e\x66ile_committed\x18\x01 \x01(\x08\x42\x41\x82\xb5\x18=True if the file was successfully committed, false otherwise.\"\x8c\x01\n\x1d\x43\x43loud_GetFileDetails_Request\x12;\n\x05ugcid\x18\x01 \x01(\x04\x42,\x82\xb5\x18(ID of the Cloud file to get details for.\x12.\n\x05\x61ppid\x18\x02 \x01(\rB\x1f\x82\xb5\x18\x1b\x41pp ID the file belongs to.\"\x8e\x03\n\x0f\x43\x43loud_UserFile\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\r\n\x05ugcid\x18\x02 \x01(\x04\x12\x10\n\x08\x66ilename\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\x04\x12\x11\n\tfile_size\x18\x05 \x01(\r\x12\x0b\n\x03url\x18\x06 \x01(\t\x12\x17\n\x0fsteamid_creator\x18\x07 \x01(\x06\x12\r\n\x05\x66lags\x18\x08 \x01(\r\x12\x97\x01\n\x11platforms_to_sync\x18\t \x03(\tB|\x82\xb5\x18xArray of string specifying which platforms to sync; value values: all, Windows, MacOS, linux, Switch, iPhoneOS, Android.\x12V\n\x08\x66ile_sha\x18\n \x01(\tBD\x82\xb5\x18@Hex string (40 digits) representing the SHA1 digest of the file.\"C\n\x1e\x43\x43loud_GetFileDetails_Response\x12!\n\x07\x64\x65tails\x18\x01 \x01(\x0b\x32\x10.CCloud_UserFile\"\xe9\x03\n!CCloud_EnumerateUserFiles_Request\x12\x34\n\x05\x61ppid\x18\x01 \x01(\rB%\x82\xb5\x18!App ID to enumerate the files of.\x12\x9b\x01\n\x10\x65xtended_details\x18\x02 \x01(\x08\x42\x80\x01\x82\xb5\x18|(Optional) Get extended details back on the files found. Defaults to only returned the app Id and UGC Id of the files found.\x12|\n\x05\x63ount\x18\x03 \x01(\rBm\x82\xb5\x18i(Optional) Maximum number of results to return on this call. Defaults to a maximum of 500 files returned.\x12r\n\x0bstart_index\x18\x04 \x01(\rB]\x82\xb5\x18Y(Optional) Starting index to begin enumeration at. Defaults to the beginning of the list.\"Z\n\"CCloud_EnumerateUserFiles_Response\x12\x1f\n\x05\x66iles\x18\x01 \x03(\x0b\x32\x10.CCloud_UserFile\x12\x13\n\x0btotal_files\x18\x02 \x01(\r\"\xb4\x01\n\x15\x43\x43loud_Delete_Request\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12.\n\x05\x61ppid\x18\x02 \x01(\rB\x1f\x82\xb5\x18\x1b\x41pp ID the file belongs to.\x12Y\n\x0fupload_batch_id\x18\x03 \x01(\x04\x42@\x82\xb5\x18<ID of this batch returned by prior BeginAppUploadBatch call.\"\x18\n\x16\x43\x43loud_Delete_Response\"\'\n%CCloud_GetClientEncryptionKey_Request\"n\n&CCloud_GetClientEncryptionKey_Response\x12\'\n\x03key\x18\x01 \x01(\x0c\x42\x1a\x82\xb5\x18\x16\x41\x45S-256 encryption key\x12\x1b\n\x03\x63rc\x18\x02 \x01(\x05\x42\x0e\x82\xb5\x18\nCRC of key\"\xaa\x01\n\x1d\x43\x43loud_CDNReport_Notification\x12\x0f\n\x07steamid\x18\x01 \x01(\x06\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\x0f\n\x07success\x18\x03 \x01(\x08\x12\x18\n\x10http_status_code\x18\x04 \x01(\r\x12\x16\n\x0e\x65xpected_bytes\x18\x05 \x01(\x04\x12\x16\n\x0ereceived_bytes\x18\x06 \x01(\x04\x12\x10\n\x08\x64uration\x18\x07 \x01(\r\"\x90\x03\n1CCloud_ExternalStorageTransferReport_Notification\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x11\n\tis_upload\x18\x03 \x01(\x08\x12\x0f\n\x07success\x18\x04 \x01(\x08\x12\x18\n\x10http_status_code\x18\x05 \x01(\r\x12\x16\n\x0e\x62ytes_expected\x18\x06 \x01(\x04\x12\x14\n\x0c\x62ytes_actual\x18\x07 \x01(\x04\x12\x13\n\x0b\x64uration_ms\x18\x08 \x01(\r\x12\x0e\n\x06\x63\x65llid\x18\t \x01(\r\x12\x0f\n\x07proxied\x18\n \x01(\x08\x12\x12\n\nipv6_local\x18\x0b \x01(\x08\x12\x13\n\x0bipv6_remote\x18\x0c \x01(\x08\x12\x1a\n\x12time_to_connect_ms\x18\r \x01(\r\x12\x1b\n\x13time_to_send_req_ms\x18\x0e \x01(\r\x12\x1d\n\x15time_to_first_byte_ms\x18\x0f \x01(\r\x12\x1c\n\x14time_to_last_byte_ms\x18\x10 \x01(\r\"\xaa\x03\n\"CCloud_BeginAppUploadBatch_Request\x12\x30\n\x05\x61ppid\x18\x01 \x01(\rB!\x82\xb5\x18\x1d\x41pp ID for this batch is for.\x12\x44\n\x0cmachine_name\x18\x02 \x01(\tB.\x82\xb5\x18*Client machine name (may be user\'s alias).\x12G\n\x0f\x66iles_to_upload\x18\x03 \x03(\tB.\x82\xb5\x18*Filenames of files to upload in this batch\x12G\n\x0f\x66iles_to_delete\x18\x04 \x03(\tB.\x82\xb5\x18*Filenames of files to delete in this batch\x12\'\n\tclient_id\x18\x05 \x01(\x04\x42\x14\x82\xb5\x18\x10\x43lient ID number\x12Q\n\x0c\x61pp_build_id\x18\x06 \x01(\x04\x42;\x82\xb5\x18\x37\x43urrent local build of the app which made these changes\"\x84\x01\n#CCloud_BeginAppUploadBatch_Response\x12\'\n\x08\x62\x61tch_id\x18\x01 \x01(\x04\x42\x15\x82\xb5\x18\x11ID of this batch.\x12\x34\n\x11\x61pp_change_number\x18\x04 \x01(\x04\x42\x19\x82\xb5\x18\x15New App Change Number\"\xb9\x01\n*CCloud_CompleteAppUploadBatch_Notification\x12\x30\n\x05\x61ppid\x18\x01 \x01(\rB!\x82\xb5\x18\x1d\x41pp ID for this batch is for.\x12\'\n\x08\x62\x61tch_id\x18\x02 \x01(\x04\x42\x15\x82\xb5\x18\x11ID of this batch.\x12\x30\n\rbatch_eresult\x18\x03 \x01(\rB\x19\x82\xb5\x18\x15result of this batch.\"\xb4\x01\n%CCloud_CompleteAppUploadBatch_Request\x12\x30\n\x05\x61ppid\x18\x01 \x01(\rB!\x82\xb5\x18\x1d\x41pp ID for this batch is for.\x12\'\n\x08\x62\x61tch_id\x18\x02 \x01(\x04\x42\x15\x82\xb5\x18\x11ID of this batch.\x12\x30\n\rbatch_eresult\x18\x03 \x01(\rB\x19\x82\xb5\x18\x15result of this batch.\"(\n&CCloud_CompleteAppUploadBatch_Response\"\x92\x06\n$CCloud_ClientBeginFileUpload_Request\x12?\n\x05\x61ppid\x18\x01 \x01(\rB0\x82\xb5\x18,App ID for which the file is being uploaded.\x12\x44\n\tfile_size\x18\x02 \x01(\rB1\x82\xb5\x18-file size as transmitted and stored in Cloud.\x12N\n\rraw_file_size\x18\x03 \x01(\rB7\x82\xb5\x18\x33\x66ile size before any compression and/or encryption.\x12(\n\x08\x66ile_sha\x18\x04 \x01(\x0c\x42\x16\x82\xb5\x18\x12SHA-1 of raw file.\x12*\n\ntime_stamp\x18\x05 \x01(\x04\x42\x16\x82\xb5\x18\x12Timestamp of file.\x12=\n\x08\x66ilename\x18\x06 \x01(\tB+\x82\xb5\x18\'Name of the file to store in the cloud.\x12%\n\x11platforms_to_sync\x18\x07 \x01(\r:\n4294967295\x12\x46\n\x07\x63\x65ll_id\x18\t \x01(\rB5\x82\xb5\x18\x31\x43lient\'s cell ID so we can pick storage location.\x12Q\n\x0b\x63\x61n_encrypt\x18\n \x01(\x08\x42<\x82\xb5\x18\x38if true, client can encrypt the file before uploading it\x12\x66\n\x0eis_shared_file\x18\x0b \x01(\x08\x42N\x82\xb5\x18Jif true, this is going to be UGC or a screenshot or some other shared file\x12$\n\x10\x64\x65precated_realm\x18\x0c \x01(\rB\n\x82\xb5\x18\x06unused\x12.\n\x0fupload_batch_id\x18\r \x01(\x04\x42\x15\x82\xb5\x18\x11ID of this batch.\"\xf1\x06\n!ClientCloudFileUploadBlockDetails\x12X\n\x08url_host\x18\x01 \x01(\tBF\x82\xb5\x18\x42Host name of server to which file should be uploaded via HTTP PUT.\x12O\n\x08url_path\x18\x02 \x01(\tB=\x82\xb5\x18\x39Relative path on server to which file should be uploaded.\x12>\n\tuse_https\x18\x03 \x01(\x08\x42+\x82\xb5\x18\'If true, use https, otherwise use http.\x12;\n\x0bhttp_method\x18\x04 \x01(\x05\x42&\x82\xb5\x18\"EHTTPMethod to use for this block.\x12}\n\x0frequest_headers\x18\x05 \x03(\x0b\x32..ClientCloudFileUploadBlockDetails.HTTPHeadersB4\x82\xb5\x18\x30Name-value pairs to be sent in HTTP PUT request.\x12\x38\n\x0c\x62lock_offset\x18\x06 \x01(\x04\x42\"\x82\xb5\x18\x1eoffset of file block to upload\x12m\n\x0c\x62lock_length\x18\x07 \x01(\rBW\x82\xb5\x18Slength of file block to upload - if zero, no part of the file is part of this block\x12_\n\x12\x65xplicit_body_data\x18\x08 \x01(\x0c\x42\x43\x82\xb5\x18?explicit body data to use, instead of file data, for this block\x12o\n\x0fmay_parallelize\x18\t \x01(\x08\x42V\x82\xb5\x18Rif true, this request may be done in parallel with other similarly-marked requests\x1a*\n\x0bHTTPHeaders\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xed\x01\n%CCloud_ClientBeginFileUpload_Response\x12[\n\x0c\x65ncrypt_file\x18\x01 \x01(\x08\x42\x45\x82\xb5\x18\x41If true, the file should be encrypted by the client before upload\x12g\n\x0e\x62lock_requests\x18\x02 \x03(\x0b\x32\".ClientCloudFileUploadBlockDetailsB+\x82\xb5\x18\'HTTP requests to make to perform upload\"\xc9\x03\n%CCloud_ClientCommitFileUpload_Request\x12\x61\n\x12transfer_succeeded\x18\x01 \x01(\x08\x42\x45\x82\xb5\x18\x41True if all block uploads succeeded, false if any of them failed.\x12x\n\x05\x61ppid\x18\x02 \x01(\rBi\x82\xb5\x18\x65\x41pp ID for which the file is being uploaded. Must match the app ID provided to Cloud.BeginFileUpload.\x12p\n\x08\x66ile_sha\x18\x03 \x01(\x0c\x42^\x82\xb5\x18ZSHA1 digest of the raw file. Must match the SHA1 digest provided to Cloud.BeginFileUpload.\x12Q\n\x08\x66ilename\x18\x04 \x01(\tB?\x82\xb5\x18;Filename as specified in the Cloud.BeginFileUpload request.\"\x83\x01\n&CCloud_ClientCommitFileUpload_Response\x12Y\n\x0e\x66ile_committed\x18\x01 \x01(\x08\x42\x41\x82\xb5\x18=True if the file was successfully committed, false otherwise.\"\xa0\x01\n!CCloud_ClientFileDownload_Request\x12.\n\x05\x61ppid\x18\x01 \x01(\rB\x1f\x82\xb5\x18\x1b\x41pp ID the file is part of.\x12+\n\x08\x66ilename\x18\x02 \x01(\tB\x19\x82\xb5\x18\x15\x46ilename of the file.\x12\x1e\n\x05realm\x18\x03 \x01(\rB\x0f\x82\xb5\x18\x0bSteam Realm\"\xfe\x05\n\"CCloud_ClientFileDownload_Response\x12\x32\n\x05\x61ppid\x18\x01 \x01(\rB#\x82\xb5\x18\x1f\x41pplication the file belongs to\x12G\n\tfile_size\x18\x02 \x01(\rB4\x82\xb5\x18\x30\x66ile size as transmitted and stored in the Cloud\x12G\n\rraw_file_size\x18\x03 \x01(\rB0\x82\xb5\x18,file size when decompressed and/or decrypted\x12!\n\x08sha_file\x18\x04 \x01(\x0c\x42\x0f\x82\xb5\x18\x0bSHA of file\x12)\n\ntime_stamp\x18\x05 \x01(\x04\x42\x15\x82\xb5\x18\x11Timestamp of file\x12J\n\x12is_explicit_delete\x18\x06 \x01(\x08\x42.\x82\xb5\x18*True if this is an explicitly deleted file\x12/\n\x08url_host\x18\x07 \x01(\tB\x1d\x82\xb5\x18\x19Host to GET the file from\x12O\n\x08url_path\x18\x08 \x01(\tB=\x82\xb5\x18\x39Path on that host to use, including URL parameters if any\x12\x37\n\tuse_https\x18\t \x01(\x08\x42$\x82\xb5\x18 If set, use HTTPS, else use HTTP\x12~\n\x0frequest_headers\x18\n \x03(\x0b\x32/.CCloud_ClientFileDownload_Response.HTTPHeadersB4\x82\xb5\x18\x30Name-value pairs to be sent in HTTP GET request.\x12\x11\n\tencrypted\x18\x0b \x01(\x08\x1a*\n\x0bHTTPHeaders\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\x93\x02\n\x1f\x43\x43loud_ClientDeleteFile_Request\x12>\n\x05\x61ppid\x18\x01 \x01(\rB/\x82\xb5\x18+App ID for which the file is being deleted.\x12\'\n\x08\x66ilename\x18\x02 \x01(\tB\x15\x82\xb5\x18\x11\x46ilename of file.\x12W\n\x12is_explicit_delete\x18\x03 \x01(\x08\x42;\x82\xb5\x18\x37If true, this is a \'delete\'; if false, it is a \'forget\'\x12.\n\x0fupload_batch_id\x18\x04 \x01(\x04\x42\x15\x82\xb5\x18\x11ID of this batch.\"\"\n CCloud_ClientDeleteFile_Response\"\xe0\x01\n,CCloud_ClientConflictResolution_Notification\x12>\n\x05\x61ppid\x18\x01 \x01(\rB/\x82\xb5\x18+App ID for which the conflict was resolved.\x12p\n\x11\x63hose_local_files\x18\x02 \x01(\x08\x42U\x82\xb5\x18QDid the user choose to keep the files local to the machine they are on right now?\"\"\n CCloud_EnumerateUserApps_Request\"\x98\x01\n!CCloud_EnumerateUserApps_Response\x12\x35\n\x04\x61pps\x18\x01 \x03(\x0b\x32\'.CCloud_EnumerateUserApps_Response.Apps\x1a<\n\x04\x41pps\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x12\n\ntotalcount\x18\x02 \x01(\x05\x12\x11\n\ttotalsize\x18\x03 \x01(\x03\"\xa5\x01\n#CCloud_GetAppFileChangelist_Request\x12\x19\n\x05\x61ppid\x18\x01 \x01(\rB\n\x82\xb5\x18\x06\x41pp ID\x12\x63\n\x14synced_change_number\x18\x02 \x01(\x04\x42\x45\x82\xb5\x18\x41\x43hange Number to which local machine was last successfully synced\"\x9b\x04\n\x12\x43\x43loud_AppFileInfo\x12+\n\tfile_name\x18\x01 \x01(\tB\x18\x82\xb5\x18\x14unqualified filename\x12!\n\x08sha_file\x18\x02 \x01(\x0c\x42\x0f\x82\xb5\x18\x0bSHA of file\x12=\n\ntime_stamp\x18\x03 \x01(\x04\x42)\x82\xb5\x18%server timestamp of last modification\x12+\n\rraw_file_size\x18\x04 \x01(\rB\x14\x82\xb5\x18\x10size of raw file\x12~\n\rpersist_state\x18\x05 \x01(\x0e\x32\x1a.ECloudStoragePersistState:$k_ECloudStoragePersistStatePersistedB%\x82\xb5\x18!current persist state of the file\x12:\n\x11platforms_to_sync\x18\x06 \x01(\rB\x1f\x82\xb5\x18\x1b\x45RemoteStoragePlatform bits\x12G\n\x11path_prefix_index\x18\x07 \x01(\rB,\x82\xb5\x18(index into string table of path prefixes\x12\x44\n\x12machine_name_index\x18\x08 \x01(\rB(\x82\xb5\x18$what machine last modified this file\"\xa1\x04\n$CCloud_GetAppFileChangelist_Response\x12\x42\n\x15\x63urrent_change_number\x18\x01 \x01(\x04\x42#\x82\xb5\x18\x1f\x43hange Number current on server\x12\x89\x01\n\x05\x66iles\x18\x02 \x03(\x0b\x32\x13.CCloud_AppFileInfoBe\x82\xb5\x18\x61List of files; may be the full list of extant/deleted files, or just a delta from the client list\x12j\n\ris_only_delta\x18\x03 \x01(\x08\x42S\x82\xb5\x18OIf true, \'files\' omits any files that have not changed since client\'s change ID\x12\x38\n\rpath_prefixes\x18\x04 \x03(\tB!\x82\xb5\x18\x1dstring table of path prefixes\x12\x38\n\rmachine_names\x18\x05 \x03(\tB!\x82\xb5\x18\x1dstring table of machine names\x12I\n\x0f\x61pp_buildid_hwm\x18\x06 \x01(\x04\x42\x30\x82\xb5\x18,highest app build ID which has uploaded data\"x\n CCloud_AppSessionSuspend_Request\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x11\n\tclient_id\x18\x02 \x01(\x04\x12\x14\n\x0cmachine_name\x18\x03 \x01(\t\x12\x1c\n\x14\x63loud_sync_completed\x18\x04 \x01(\x08\"#\n!CCloud_AppSessionSuspend_Response\"C\n\x1f\x43\x43loud_AppSessionResume_Request\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x11\n\tclient_id\x18\x02 \x01(\x04\"\"\n CCloud_AppSessionResume_Response\"{\n\x1e\x43\x43loud_AppLaunchIntent_Request\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x11\n\tclient_id\x18\x02 \x01(\x04\x12\x14\n\x0cmachine_name\x18\x03 \x01(\t\x12!\n\x19ignore_pending_operations\x18\x04 \x01(\x08\"\x9a\x01\n\x1f\x43\x43loud_AppLaunchIntent_Response\x12w\n\x19pending_remote_operations\x18\x01 \x03(\x0b\x32\x1e.CCloud_PendingRemoteOperationB4\x82\xb5\x18\x30pending remote operations you should be aware of\"|\n#CCloud_AppExitSyncDone_Notification\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x11\n\tclient_id\x18\x02 \x01(\x04\x12\x19\n\x11uploads_completed\x18\x03 \x01(\x08\x12\x18\n\x10uploads_required\x18\x04 \x01(\x08\"6\n%CCloud_ClientGetAppQuotaUsage_Request\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\"\x86\x01\n&CCloud_ClientGetAppQuotaUsage_Response\x12\x16\n\x0e\x65xisting_files\x18\x01 \x01(\r\x12\x16\n\x0e\x65xisting_bytes\x18\x02 \x01(\x04\x12\x15\n\rmax_num_files\x18\x03 \x01(\r\x12\x15\n\rmax_num_bytes\x18\x04 \x01(\x04\"\x9d\x01\n\'CCloud_AppCloudStateChange_Notification\x12<\n\x05\x61ppid\x18\x01 \x01(\rB-\x82\xb5\x18)App which has had a change in cloud state\x12\x34\n\x11\x61pp_change_number\x18\x02 \x01(\x04\x42\x19\x82\xb5\x18\x15New App Change Number\"@\n*CCloud_ClientLogUploadRequest_Notification\x12\x12\n\nrequest_id\x18\x01 \x01(\x04\x32\x8d#\n\x05\x43loud\x12\x84\x01\n\x14\x43lientLogUploadCheck\x12).CCloud_ClientLogUploadCheck_Notification\x1a\x0b.NoResponse\"4\x82\xb5\x18\x30\x43lient checking for pending log upload requests.\x12\x8f\x01\n\x17\x43lientLogUploadComplete\x12,.CCloud_ClientLogUploadComplete_Notification\x1a\x0b.NoResponse\"9\x82\xb5\x18\x35\x43lient is flagging a log upload request as completed.\x12\x9c\x01\n\x13GetUploadServerInfo\x12#.CCloud_GetUploadServerInfo_Request\x1a$.CCloud_GetUploadServerInfo_Response\":\x82\xb5\x18\x36Returns the URL of the proper cloud server for a user.\x12\xa8\x02\n\x0f\x42\x65ginHTTPUpload\x12\x1f.CCloud_BeginHTTPUpload_Request\x1a .CCloud_BeginHTTPUpload_Response\"\xd1\x01\x82\xb5\x18\xcc\x01\x42\x65gins the process of uploading a file to Steam external storage services. File should be uploaded via HTTP PUT to the returned URL, after which the upload must be finalized by a call to CommitHTTPUpload.\x12\xad\x01\n\x10\x43ommitHTTPUpload\x12 .CCloud_CommitHTTPUpload_Request\x1a!.CCloud_CommitHTTPUpload_Response\"T\x82\xb5\x18PCommits a file upload initiated by BeginHTTPUpload and transferred via HTTP PUT.\x12\xa5\x02\n\x0e\x42\x65ginUGCUpload\x12\x1e.CCloud_BeginUGCUpload_Request\x1a\x1f.CCloud_BeginUGCUpload_Response\"\xd1\x01\x82\xb5\x18\xcc\x01\x42\x65gins the process of uploading a file to Steam external storage services. File should be uploaded via HTTP PUT to the returned URL, after which the upload must be finalized by a call to CommitHTTPUpload.\x12\xa9\x01\n\x0f\x43ommitUGCUpload\x12\x1f.CCloud_CommitUGCUpload_Request\x1a .CCloud_CommitUGCUpload_Response\"S\x82\xb5\x18OCommits a file upload initiated by BeginUGCUpload and transferred via HTTP PUT.\x12w\n\x0eGetFileDetails\x12\x1e.CCloud_GetFileDetails_Request\x1a\x1f.CCloud_GetFileDetails_Response\"$\x82\xb5\x18 Returns details on a Cloud file.\x12\xba\x01\n\x12\x45numerateUserFiles\x12\".CCloud_EnumerateUserFiles_Request\x1a#.CCloud_EnumerateUserFiles_Response\"[\x82\xb5\x18WEnumerates Cloud files for a user of a given app ID. Returns up to 500 files at a time.\x12\x64\n\x06\x44\x65lete\x12\x16.CCloud_Delete_Request\x1a\x17.CCloud_Delete_Response\")\x82\xb5\x18%Deletes a file from the user\'s cloud.\x12\x99\x01\n\x16GetClientEncryptionKey\x12&.CCloud_GetClientEncryptionKey_Request\x1a\'.CCloud_GetClientEncryptionKey_Response\".\x82\xb5\x18*Gets the user\'s Cloud file encryption key.\x12\x63\n\tCDNReport\x12\x1e.CCloud_CDNReport_Notification\x1a\x0b.NoResponse\")\x82\xb5\x18%Reports the result of a CDN transfer.\x12\x9f\x01\n\x1d\x45xternalStorageTransferReport\x12\x32.CCloud_ExternalStorageTransferReport_Notification\x1a\x0b.NoResponse\"=\x82\xb5\x18\x39Reports the result of an external Cloud storage transfer.\x12\xab\x01\n\x13\x42\x65ginAppUploadBatch\x12#.CCloud_BeginAppUploadBatch_Request\x1a$.CCloud_BeginAppUploadBatch_Response\"I\x82\xb5\x18\x45Indicate a batch of files that will be uploaded / deleted for an app.\x12\xa3\x01\n\x16\x43ompleteAppUploadBatch\x12+.CCloud_CompleteAppUploadBatch_Notification\x1a\x0b.NoResponse\"O\x82\xb5\x18KIndicate that the batch is complete or being stopped for some other reason.\x12\xc2\x01\n\x1e\x43ompleteAppUploadBatchBlocking\x12&.CCloud_CompleteAppUploadBatch_Request\x1a\'.CCloud_CompleteAppUploadBatch_Response\"O\x82\xb5\x18KIndicate that the batch is complete or being stopped for some other reason.\x12\x88\x01\n\x15\x43lientBeginFileUpload\x12%.CCloud_ClientBeginFileUpload_Request\x1a&.CCloud_ClientBeginFileUpload_Response\" \x82\xb5\x18\x1cInitiate an upload to Cloud.\x12\x9a\x01\n\x16\x43lientCommitFileUpload\x12&.CCloud_ClientCommitFileUpload_Request\x1a\'.CCloud_ClientCommitFileUpload_Response\"/\x82\xb5\x18+Commit the file upload or indicate failure.\x12|\n\x12\x43lientFileDownload\x12\".CCloud_ClientFileDownload_Request\x1a#.CCloud_ClientFileDownload_Response\"\x1d\x82\xb5\x18\x19Initiate a file download.\x12u\n\x10\x43lientDeleteFile\x12 .CCloud_ClientDeleteFile_Request\x1a!.CCloud_ClientDeleteFile_Response\"\x1c\x82\xb5\x18\x18\x44\x65lete or forget a file.\x12\x8e\x01\n\x18\x43lientConflictResolution\x12-.CCloud_ClientConflictResolution_Notification\x1a\x0b.NoResponse\"6\x82\xb5\x18\x32User has picked a resolution for a Cloud conflict.\x12\x8f\x01\n\x11\x45numerateUserApps\x12!.CCloud_EnumerateUserApps_Request\x1a\".CCloud_EnumerateUserApps_Response\"3\x82\xb5\x18/Enumerates apps stroing cloud files for a user.\x12\xb4\x01\n\x14GetAppFileChangelist\x12$.CCloud_GetAppFileChangelist_Request\x1a%.CCloud_GetAppFileChangelist_Response\"O\x82\xb5\x18KGet a list of Cloud file changes for an app given a starting Change Number.\x12\x81\x01\n\x11SuspendAppSession\x12!.CCloud_AppSessionSuspend_Request\x1a\".CCloud_AppSessionSuspend_Response\"%\x82\xb5\x18!An app session is being suspended\x12|\n\x10ResumeAppSession\x12 .CCloud_AppSessionResume_Request\x1a!.CCloud_AppSessionResume_Response\"#\x82\xb5\x18\x1f\x41n app session is being resumed\x12\x7f\n\x15SignalAppLaunchIntent\x12\x1f.CCloud_AppLaunchIntent_Request\x1a .CCloud_AppLaunchIntent_Response\"#\x82\xb5\x18\x1f\x43lient intends to launch an app\x12\x82\x01\n\x15SignalAppExitSyncDone\x12$.CCloud_AppExitSyncDone_Notification\x1a\x0b.NoResponse\"6\x82\xb5\x18\x32\x43lient is done trying to sync after a game session\x12\x9a\x01\n\x16\x43lientGetAppQuotaUsage\x12&.CCloud_ClientGetAppQuotaUsage_Request\x1a\'.CCloud_ClientGetAppQuotaUsage_Response\"/\x82\xb5\x18+Client is requesting quota usage for an app\x1a)\x82\xb5\x18%A service for Steam Cloud operations.2\xd8\x02\n\x0b\x43loudClient\x12}\n\x14NotifyAppStateChange\x12(.CCloud_AppCloudStateChange_Notification\x1a\x0b.NoResponse\".\x82\xb5\x18*Cloud state for the given app has changed.\x12\x94\x01\n\x16\x43lientLogUploadRequest\x12+.CCloud_ClientLogUploadRequest_Notification\x1a\x0b.NoResponse\"@\x82\xb5\x18<Server is requesting log file uploads from the given client.\x1a\x33\x82\xb5\x18+Client notifications for Steam cloud events\xc0\xb5\x18\x02\x42\x03\x90\x01\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'steammessages_cloud_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\220\001\001'
  _globals['_CCLOUD_GETUPLOADSERVERINFO_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_GETUPLOADSERVERINFO_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030+App ID to which a file will be uploaded to.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030,App ID for which the file is being uploaded.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['file_size']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['file_size']._serialized_options = b'\202\265\030\034Original file size in bytes.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['filename']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['filename']._serialized_options = b'\202\265\030\'Name of the file to store in the cloud.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['file_sha']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['file_sha']._serialized_options = b'\202\265\030@Hex string (40 digits) representing the SHA1 digest of the file.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['is_public']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['is_public']._serialized_options = b'\202\265\030ETrue if the file should be marked public on the UFS, false otherwise.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['platforms_to_sync']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['platforms_to_sync']._serialized_options = b'\202\265\030xArray of string specifying which platforms to sync; value values: all, Windows, MacOS, linux, Switch, iPhoneOS, Android.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['request_headers_names']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['request_headers_names']._serialized_options = b'\202\265\030ONames for headers you\'ll want to set on your upload request. May be left blank.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['request_headers_values']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['request_headers_values']._serialized_options = b'\202\265\030rValues for headers you\'ll want to set on your upload request. The number of names must equal the number of values.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['upload_batch_id']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST'].fields_by_name['upload_batch_id']._serialized_options = b'\202\265\030<ID of this batch returned by prior BeginAppUploadBatch call.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['ugcid']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['ugcid']._serialized_options = b'\202\265\030\034UGC ID of the uploaded file.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['timestamp']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['timestamp']._serialized_options = b'\202\265\030\031Server timestamp of file.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['url_host']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['url_host']._serialized_options = b'\202\265\030BHost name of server to which file should be uploaded via HTTP PUT.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['url_path']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['url_path']._serialized_options = b'\202\265\0309Relative path on server to which file should be uploaded.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['use_https']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['use_https']._serialized_options = b'\202\265\030\'If true, use https, otherwise use http.'
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['request_headers']._loaded_options = None
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE'].fields_by_name['request_headers']._serialized_options = b'\202\265\0300Name-value pairs to be sent in HTTP PUT request.'
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST'].fields_by_name['transfer_succeeded']._loaded_options = None
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST'].fields_by_name['transfer_succeeded']._serialized_options = b'\202\265\030\202\001True if the HTTP PUT to the upload URL succeeded (URL provided in response to Cloud.BeginHTTPUpload), false if a failure occurred.'
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030eApp ID for which the file is being uploaded. Must match the app ID provided to Cloud.BeginHTTPUpload.'
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST'].fields_by_name['file_sha']._loaded_options = None
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST'].fields_by_name['file_sha']._serialized_options = b'\202\265\030~Hex string (40 digits) representing the SHA1 digest of the file. Must match the SHA1 digest provided to Cloud.BeginHTTPUpload.'
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST'].fields_by_name['filename']._loaded_options = None
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST'].fields_by_name['filename']._serialized_options = b'\202\265\030;Filename as specified in the Cloud.BeginHTTPUpload request.'
  _globals['_CCLOUD_COMMITHTTPUPLOAD_RESPONSE'].fields_by_name['file_committed']._loaded_options = None
  _globals['_CCLOUD_COMMITHTTPUPLOAD_RESPONSE'].fields_by_name['file_committed']._serialized_options = b'\202\265\030=True if the file was successfully committed, false otherwise.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030\033App ID this UGC belongs to.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['file_size']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['file_size']._serialized_options = b'\202\265\030\023File size in bytes.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['filename']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['filename']._serialized_options = b'\202\265\030\021Name of the file.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['file_sha']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['file_sha']._serialized_options = b'\202\265\030@Hex string (40 digits) representing the SHA1 digest of the file.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['content_type']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST'].fields_by_name['content_type']._serialized_options = b'\202\265\030\035MIME content type of the file'
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['storage_system']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['storage_system']._serialized_options = b'\202\265\030\'UGC Storage system chosen for this file'
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['ugcid']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['ugcid']._serialized_options = b'\202\265\030\034UGC ID of the uploaded file.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['timestamp']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['timestamp']._serialized_options = b'\202\265\030\031Server timestamp of file.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['url_host']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['url_host']._serialized_options = b'\202\265\030BHost name of server to which file should be uploaded via HTTP PUT.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['url_path']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['url_path']._serialized_options = b'\202\265\0309Relative path on server to which file should be uploaded.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['use_https']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['use_https']._serialized_options = b'\202\265\030\'If true, use https, otherwise use http.'
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['request_headers']._loaded_options = None
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE'].fields_by_name['request_headers']._serialized_options = b'\202\265\0300Name-value pairs to be sent in HTTP PUT request.'
  _globals['_CCLOUD_COMMITUGCUPLOAD_REQUEST'].fields_by_name['transfer_succeeded']._loaded_options = None
  _globals['_CCLOUD_COMMITUGCUPLOAD_REQUEST'].fields_by_name['transfer_succeeded']._serialized_options = b'\202\265\030\201\001True if the HTTP PUT to the upload URL succeeded (URL provided in response to Cloud.BeginUGCUpload), false if a failure occurred.'
  _globals['_CCLOUD_COMMITUGCUPLOAD_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_COMMITUGCUPLOAD_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030dApp ID for which the file is being uploaded. Must match the app ID provided to Cloud.BeginUGCUpload.'
  _globals['_CCLOUD_COMMITUGCUPLOAD_REQUEST'].fields_by_name['ugcid']._loaded_options = None
  _globals['_CCLOUD_COMMITUGCUPLOAD_REQUEST'].fields_by_name['ugcid']._serialized_options = b'\202\265\030\034UGC ID of the uploaded file.'
  _globals['_CCLOUD_COMMITUGCUPLOAD_RESPONSE'].fields_by_name['file_committed']._loaded_options = None
  _globals['_CCLOUD_COMMITUGCUPLOAD_RESPONSE'].fields_by_name['file_committed']._serialized_options = b'\202\265\030=True if the file was successfully committed, false otherwise.'
  _globals['_CCLOUD_GETFILEDETAILS_REQUEST'].fields_by_name['ugcid']._loaded_options = None
  _globals['_CCLOUD_GETFILEDETAILS_REQUEST'].fields_by_name['ugcid']._serialized_options = b'\202\265\030(ID of the Cloud file to get details for.'
  _globals['_CCLOUD_GETFILEDETAILS_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_GETFILEDETAILS_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030\033App ID the file belongs to.'
  _globals['_CCLOUD_USERFILE'].fields_by_name['platforms_to_sync']._loaded_options = None
  _globals['_CCLOUD_USERFILE'].fields_by_name['platforms_to_sync']._serialized_options = b'\202\265\030xArray of string specifying which platforms to sync; value values: all, Windows, MacOS, linux, Switch, iPhoneOS, Android.'
  _globals['_CCLOUD_USERFILE'].fields_by_name['file_sha']._loaded_options = None
  _globals['_CCLOUD_USERFILE'].fields_by_name['file_sha']._serialized_options = b'\202\265\030@Hex string (40 digits) representing the SHA1 digest of the file.'
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030!App ID to enumerate the files of.'
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST'].fields_by_name['extended_details']._loaded_options = None
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST'].fields_by_name['extended_details']._serialized_options = b'\202\265\030|(Optional) Get extended details back on the files found. Defaults to only returned the app Id and UGC Id of the files found.'
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST'].fields_by_name['count']._loaded_options = None
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST'].fields_by_name['count']._serialized_options = b'\202\265\030i(Optional) Maximum number of results to return on this call. Defaults to a maximum of 500 files returned.'
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST'].fields_by_name['start_index']._loaded_options = None
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST'].fields_by_name['start_index']._serialized_options = b'\202\265\030Y(Optional) Starting index to begin enumeration at. Defaults to the beginning of the list.'
  _globals['_CCLOUD_DELETE_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_DELETE_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030\033App ID the file belongs to.'
  _globals['_CCLOUD_DELETE_REQUEST'].fields_by_name['upload_batch_id']._loaded_options = None
  _globals['_CCLOUD_DELETE_REQUEST'].fields_by_name['upload_batch_id']._serialized_options = b'\202\265\030<ID of this batch returned by prior BeginAppUploadBatch call.'
  _globals['_CCLOUD_GETCLIENTENCRYPTIONKEY_RESPONSE'].fields_by_name['key']._loaded_options = None
  _globals['_CCLOUD_GETCLIENTENCRYPTIONKEY_RESPONSE'].fields_by_name['key']._serialized_options = b'\202\265\030\026AES-256 encryption key'
  _globals['_CCLOUD_GETCLIENTENCRYPTIONKEY_RESPONSE'].fields_by_name['crc']._loaded_options = None
  _globals['_CCLOUD_GETCLIENTENCRYPTIONKEY_RESPONSE'].fields_by_name['crc']._serialized_options = b'\202\265\030\nCRC of key'
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030\035App ID for this batch is for.'
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['machine_name']._loaded_options = None
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['machine_name']._serialized_options = b'\202\265\030*Client machine name (may be user\'s alias).'
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['files_to_upload']._loaded_options = None
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['files_to_upload']._serialized_options = b'\202\265\030*Filenames of files to upload in this batch'
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['files_to_delete']._loaded_options = None
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['files_to_delete']._serialized_options = b'\202\265\030*Filenames of files to delete in this batch'
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['client_id']._loaded_options = None
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['client_id']._serialized_options = b'\202\265\030\020Client ID number'
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['app_build_id']._loaded_options = None
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST'].fields_by_name['app_build_id']._serialized_options = b'\202\265\0307Current local build of the app which made these changes'
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_RESPONSE'].fields_by_name['batch_id']._loaded_options = None
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_RESPONSE'].fields_by_name['batch_id']._serialized_options = b'\202\265\030\021ID of this batch.'
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_RESPONSE'].fields_by_name['app_change_number']._loaded_options = None
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_RESPONSE'].fields_by_name['app_change_number']._serialized_options = b'\202\265\030\025New App Change Number'
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_NOTIFICATION'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_NOTIFICATION'].fields_by_name['appid']._serialized_options = b'\202\265\030\035App ID for this batch is for.'
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_NOTIFICATION'].fields_by_name['batch_id']._loaded_options = None
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_NOTIFICATION'].fields_by_name['batch_id']._serialized_options = b'\202\265\030\021ID of this batch.'
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_NOTIFICATION'].fields_by_name['batch_eresult']._loaded_options = None
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_NOTIFICATION'].fields_by_name['batch_eresult']._serialized_options = b'\202\265\030\025result of this batch.'
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030\035App ID for this batch is for.'
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_REQUEST'].fields_by_name['batch_id']._loaded_options = None
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_REQUEST'].fields_by_name['batch_id']._serialized_options = b'\202\265\030\021ID of this batch.'
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_REQUEST'].fields_by_name['batch_eresult']._loaded_options = None
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_REQUEST'].fields_by_name['batch_eresult']._serialized_options = b'\202\265\030\025result of this batch.'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030,App ID for which the file is being uploaded.'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['file_size']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['file_size']._serialized_options = b'\202\265\030-file size as transmitted and stored in Cloud.'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['raw_file_size']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['raw_file_size']._serialized_options = b'\202\265\0303file size before any compression and/or encryption.'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['file_sha']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['file_sha']._serialized_options = b'\202\265\030\022SHA-1 of raw file.'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['time_stamp']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['time_stamp']._serialized_options = b'\202\265\030\022Timestamp of file.'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['filename']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['filename']._serialized_options = b'\202\265\030\'Name of the file to store in the cloud.'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['cell_id']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['cell_id']._serialized_options = b'\202\265\0301Client\'s cell ID so we can pick storage location.'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['can_encrypt']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['can_encrypt']._serialized_options = b'\202\265\0308if true, client can encrypt the file before uploading it'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['is_shared_file']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['is_shared_file']._serialized_options = b'\202\265\030Jif true, this is going to be UGC or a screenshot or some other shared file'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['deprecated_realm']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['deprecated_realm']._serialized_options = b'\202\265\030\006unused'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['upload_batch_id']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST'].fields_by_name['upload_batch_id']._serialized_options = b'\202\265\030\021ID of this batch.'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['url_host']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['url_host']._serialized_options = b'\202\265\030BHost name of server to which file should be uploaded via HTTP PUT.'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['url_path']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['url_path']._serialized_options = b'\202\265\0309Relative path on server to which file should be uploaded.'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['use_https']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['use_https']._serialized_options = b'\202\265\030\'If true, use https, otherwise use http.'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['http_method']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['http_method']._serialized_options = b'\202\265\030\"EHTTPMethod to use for this block.'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['request_headers']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['request_headers']._serialized_options = b'\202\265\0300Name-value pairs to be sent in HTTP PUT request.'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['block_offset']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['block_offset']._serialized_options = b'\202\265\030\036offset of file block to upload'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['block_length']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['block_length']._serialized_options = b'\202\265\030Slength of file block to upload - if zero, no part of the file is part of this block'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['explicit_body_data']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['explicit_body_data']._serialized_options = b'\202\265\030?explicit body data to use, instead of file data, for this block'
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['may_parallelize']._loaded_options = None
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS'].fields_by_name['may_parallelize']._serialized_options = b'\202\265\030Rif true, this request may be done in parallel with other similarly-marked requests'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_RESPONSE'].fields_by_name['encrypt_file']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_RESPONSE'].fields_by_name['encrypt_file']._serialized_options = b'\202\265\030AIf true, the file should be encrypted by the client before upload'
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_RESPONSE'].fields_by_name['block_requests']._loaded_options = None
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_RESPONSE'].fields_by_name['block_requests']._serialized_options = b'\202\265\030\'HTTP requests to make to perform upload'
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST'].fields_by_name['transfer_succeeded']._loaded_options = None
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST'].fields_by_name['transfer_succeeded']._serialized_options = b'\202\265\030ATrue if all block uploads succeeded, false if any of them failed.'
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030eApp ID for which the file is being uploaded. Must match the app ID provided to Cloud.BeginFileUpload.'
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST'].fields_by_name['file_sha']._loaded_options = None
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST'].fields_by_name['file_sha']._serialized_options = b'\202\265\030ZSHA1 digest of the raw file. Must match the SHA1 digest provided to Cloud.BeginFileUpload.'
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST'].fields_by_name['filename']._loaded_options = None
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST'].fields_by_name['filename']._serialized_options = b'\202\265\030;Filename as specified in the Cloud.BeginFileUpload request.'
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_RESPONSE'].fields_by_name['file_committed']._loaded_options = None
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_RESPONSE'].fields_by_name['file_committed']._serialized_options = b'\202\265\030=True if the file was successfully committed, false otherwise.'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030\033App ID the file is part of.'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_REQUEST'].fields_by_name['filename']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_REQUEST'].fields_by_name['filename']._serialized_options = b'\202\265\030\025Filename of the file.'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_REQUEST'].fields_by_name['realm']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_REQUEST'].fields_by_name['realm']._serialized_options = b'\202\265\030\013Steam Realm'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['appid']._serialized_options = b'\202\265\030\037Application the file belongs to'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['file_size']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['file_size']._serialized_options = b'\202\265\0300file size as transmitted and stored in the Cloud'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['raw_file_size']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['raw_file_size']._serialized_options = b'\202\265\030,file size when decompressed and/or decrypted'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['sha_file']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['sha_file']._serialized_options = b'\202\265\030\013SHA of file'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['time_stamp']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['time_stamp']._serialized_options = b'\202\265\030\021Timestamp of file'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['is_explicit_delete']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['is_explicit_delete']._serialized_options = b'\202\265\030*True if this is an explicitly deleted file'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['url_host']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['url_host']._serialized_options = b'\202\265\030\031Host to GET the file from'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['url_path']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['url_path']._serialized_options = b'\202\265\0309Path on that host to use, including URL parameters if any'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['use_https']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['use_https']._serialized_options = b'\202\265\030 If set, use HTTPS, else use HTTP'
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['request_headers']._loaded_options = None
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE'].fields_by_name['request_headers']._serialized_options = b'\202\265\0300Name-value pairs to be sent in HTTP GET request.'
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030+App ID for which the file is being deleted.'
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST'].fields_by_name['filename']._loaded_options = None
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST'].fields_by_name['filename']._serialized_options = b'\202\265\030\021Filename of file.'
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST'].fields_by_name['is_explicit_delete']._loaded_options = None
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST'].fields_by_name['is_explicit_delete']._serialized_options = b'\202\265\0307If true, this is a \'delete\'; if false, it is a \'forget\''
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST'].fields_by_name['upload_batch_id']._loaded_options = None
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST'].fields_by_name['upload_batch_id']._serialized_options = b'\202\265\030\021ID of this batch.'
  _globals['_CCLOUD_CLIENTCONFLICTRESOLUTION_NOTIFICATION'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_CLIENTCONFLICTRESOLUTION_NOTIFICATION'].fields_by_name['appid']._serialized_options = b'\202\265\030+App ID for which the conflict was resolved.'
  _globals['_CCLOUD_CLIENTCONFLICTRESOLUTION_NOTIFICATION'].fields_by_name['chose_local_files']._loaded_options = None
  _globals['_CCLOUD_CLIENTCONFLICTRESOLUTION_NOTIFICATION'].fields_by_name['chose_local_files']._serialized_options = b'\202\265\030QDid the user choose to keep the files local to the machine they are on right now?'
  _globals['_CCLOUD_GETAPPFILECHANGELIST_REQUEST'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_GETAPPFILECHANGELIST_REQUEST'].fields_by_name['appid']._serialized_options = b'\202\265\030\006App ID'
  _globals['_CCLOUD_GETAPPFILECHANGELIST_REQUEST'].fields_by_name['synced_change_number']._loaded_options = None
  _globals['_CCLOUD_GETAPPFILECHANGELIST_REQUEST'].fields_by_name['synced_change_number']._serialized_options = b'\202\265\030AChange Number to which local machine was last successfully synced'
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['file_name']._loaded_options = None
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['file_name']._serialized_options = b'\202\265\030\024unqualified filename'
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['sha_file']._loaded_options = None
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['sha_file']._serialized_options = b'\202\265\030\013SHA of file'
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['time_stamp']._loaded_options = None
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['time_stamp']._serialized_options = b'\202\265\030%server timestamp of last modification'
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['raw_file_size']._loaded_options = None
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['raw_file_size']._serialized_options = b'\202\265\030\020size of raw file'
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['persist_state']._loaded_options = None
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['persist_state']._serialized_options = b'\202\265\030!current persist state of the file'
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['platforms_to_sync']._loaded_options = None
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['platforms_to_sync']._serialized_options = b'\202\265\030\033ERemoteStoragePlatform bits'
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['path_prefix_index']._loaded_options = None
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['path_prefix_index']._serialized_options = b'\202\265\030(index into string table of path prefixes'
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['machine_name_index']._loaded_options = None
  _globals['_CCLOUD_APPFILEINFO'].fields_by_name['machine_name_index']._serialized_options = b'\202\265\030$what machine last modified this file'
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['current_change_number']._loaded_options = None
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['current_change_number']._serialized_options = b'\202\265\030\037Change Number current on server'
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['files']._loaded_options = None
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['files']._serialized_options = b'\202\265\030aList of files; may be the full list of extant/deleted files, or just a delta from the client list'
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['is_only_delta']._loaded_options = None
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['is_only_delta']._serialized_options = b'\202\265\030OIf true, \'files\' omits any files that have not changed since client\'s change ID'
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['path_prefixes']._loaded_options = None
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['path_prefixes']._serialized_options = b'\202\265\030\035string table of path prefixes'
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['machine_names']._loaded_options = None
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['machine_names']._serialized_options = b'\202\265\030\035string table of machine names'
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['app_buildid_hwm']._loaded_options = None
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE'].fields_by_name['app_buildid_hwm']._serialized_options = b'\202\265\030,highest app build ID which has uploaded data'
  _globals['_CCLOUD_APPLAUNCHINTENT_RESPONSE'].fields_by_name['pending_remote_operations']._loaded_options = None
  _globals['_CCLOUD_APPLAUNCHINTENT_RESPONSE'].fields_by_name['pending_remote_operations']._serialized_options = b'\202\265\0300pending remote operations you should be aware of'
  _globals['_CCLOUD_APPCLOUDSTATECHANGE_NOTIFICATION'].fields_by_name['appid']._loaded_options = None
  _globals['_CCLOUD_APPCLOUDSTATECHANGE_NOTIFICATION'].fields_by_name['appid']._serialized_options = b'\202\265\030)App which has had a change in cloud state'
  _globals['_CCLOUD_APPCLOUDSTATECHANGE_NOTIFICATION'].fields_by_name['app_change_number']._loaded_options = None
  _globals['_CCLOUD_APPCLOUDSTATECHANGE_NOTIFICATION'].fields_by_name['app_change_number']._serialized_options = b'\202\265\030\025New App Change Number'
  _globals['_CLOUD']._loaded_options = None
  _globals['_CLOUD']._serialized_options = b'\202\265\030%A service for Steam Cloud operations.'
  _globals['_CLOUD'].methods_by_name['ClientLogUploadCheck']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ClientLogUploadCheck']._serialized_options = b'\202\265\0300Client checking for pending log upload requests.'
  _globals['_CLOUD'].methods_by_name['ClientLogUploadComplete']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ClientLogUploadComplete']._serialized_options = b'\202\265\0305Client is flagging a log upload request as completed.'
  _globals['_CLOUD'].methods_by_name['GetUploadServerInfo']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['GetUploadServerInfo']._serialized_options = b'\202\265\0306Returns the URL of the proper cloud server for a user.'
  _globals['_CLOUD'].methods_by_name['BeginHTTPUpload']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['BeginHTTPUpload']._serialized_options = b'\202\265\030\314\001Begins the process of uploading a file to Steam external storage services. File should be uploaded via HTTP PUT to the returned URL, after which the upload must be finalized by a call to CommitHTTPUpload.'
  _globals['_CLOUD'].methods_by_name['CommitHTTPUpload']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['CommitHTTPUpload']._serialized_options = b'\202\265\030PCommits a file upload initiated by BeginHTTPUpload and transferred via HTTP PUT.'
  _globals['_CLOUD'].methods_by_name['BeginUGCUpload']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['BeginUGCUpload']._serialized_options = b'\202\265\030\314\001Begins the process of uploading a file to Steam external storage services. File should be uploaded via HTTP PUT to the returned URL, after which the upload must be finalized by a call to CommitHTTPUpload.'
  _globals['_CLOUD'].methods_by_name['CommitUGCUpload']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['CommitUGCUpload']._serialized_options = b'\202\265\030OCommits a file upload initiated by BeginUGCUpload and transferred via HTTP PUT.'
  _globals['_CLOUD'].methods_by_name['GetFileDetails']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['GetFileDetails']._serialized_options = b'\202\265\030 Returns details on a Cloud file.'
  _globals['_CLOUD'].methods_by_name['EnumerateUserFiles']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['EnumerateUserFiles']._serialized_options = b'\202\265\030WEnumerates Cloud files for a user of a given app ID. Returns up to 500 files at a time.'
  _globals['_CLOUD'].methods_by_name['Delete']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['Delete']._serialized_options = b'\202\265\030%Deletes a file from the user\'s cloud.'
  _globals['_CLOUD'].methods_by_name['GetClientEncryptionKey']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['GetClientEncryptionKey']._serialized_options = b'\202\265\030*Gets the user\'s Cloud file encryption key.'
  _globals['_CLOUD'].methods_by_name['CDNReport']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['CDNReport']._serialized_options = b'\202\265\030%Reports the result of a CDN transfer.'
  _globals['_CLOUD'].methods_by_name['ExternalStorageTransferReport']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ExternalStorageTransferReport']._serialized_options = b'\202\265\0309Reports the result of an external Cloud storage transfer.'
  _globals['_CLOUD'].methods_by_name['BeginAppUploadBatch']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['BeginAppUploadBatch']._serialized_options = b'\202\265\030EIndicate a batch of files that will be uploaded / deleted for an app.'
  _globals['_CLOUD'].methods_by_name['CompleteAppUploadBatch']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['CompleteAppUploadBatch']._serialized_options = b'\202\265\030KIndicate that the batch is complete or being stopped for some other reason.'
  _globals['_CLOUD'].methods_by_name['CompleteAppUploadBatchBlocking']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['CompleteAppUploadBatchBlocking']._serialized_options = b'\202\265\030KIndicate that the batch is complete or being stopped for some other reason.'
  _globals['_CLOUD'].methods_by_name['ClientBeginFileUpload']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ClientBeginFileUpload']._serialized_options = b'\202\265\030\034Initiate an upload to Cloud.'
  _globals['_CLOUD'].methods_by_name['ClientCommitFileUpload']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ClientCommitFileUpload']._serialized_options = b'\202\265\030+Commit the file upload or indicate failure.'
  _globals['_CLOUD'].methods_by_name['ClientFileDownload']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ClientFileDownload']._serialized_options = b'\202\265\030\031Initiate a file download.'
  _globals['_CLOUD'].methods_by_name['ClientDeleteFile']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ClientDeleteFile']._serialized_options = b'\202\265\030\030Delete or forget a file.'
  _globals['_CLOUD'].methods_by_name['ClientConflictResolution']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ClientConflictResolution']._serialized_options = b'\202\265\0302User has picked a resolution for a Cloud conflict.'
  _globals['_CLOUD'].methods_by_name['EnumerateUserApps']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['EnumerateUserApps']._serialized_options = b'\202\265\030/Enumerates apps stroing cloud files for a user.'
  _globals['_CLOUD'].methods_by_name['GetAppFileChangelist']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['GetAppFileChangelist']._serialized_options = b'\202\265\030KGet a list of Cloud file changes for an app given a starting Change Number.'
  _globals['_CLOUD'].methods_by_name['SuspendAppSession']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['SuspendAppSession']._serialized_options = b'\202\265\030!An app session is being suspended'
  _globals['_CLOUD'].methods_by_name['ResumeAppSession']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ResumeAppSession']._serialized_options = b'\202\265\030\037An app session is being resumed'
  _globals['_CLOUD'].methods_by_name['SignalAppLaunchIntent']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['SignalAppLaunchIntent']._serialized_options = b'\202\265\030\037Client intends to launch an app'
  _globals['_CLOUD'].methods_by_name['SignalAppExitSyncDone']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['SignalAppExitSyncDone']._serialized_options = b'\202\265\0302Client is done trying to sync after a game session'
  _globals['_CLOUD'].methods_by_name['ClientGetAppQuotaUsage']._loaded_options = None
  _globals['_CLOUD'].methods_by_name['ClientGetAppQuotaUsage']._serialized_options = b'\202\265\030+Client is requesting quota usage for an app'
  _globals['_CLOUDCLIENT']._loaded_options = None
  _globals['_CLOUDCLIENT']._serialized_options = b'\202\265\030+Client notifications for Steam cloud events\300\265\030\002'
  _globals['_CLOUDCLIENT'].methods_by_name['NotifyAppStateChange']._loaded_options = None
  _globals['_CLOUDCLIENT'].methods_by_name['NotifyAppStateChange']._serialized_options = b'\202\265\030*Cloud state for the given app has changed.'
  _globals['_CLOUDCLIENT'].methods_by_name['ClientLogUploadRequest']._loaded_options = None
  _globals['_CLOUDCLIENT'].methods_by_name['ClientLogUploadRequest']._serialized_options = b'\202\265\030<Server is requesting log file uploads from the given client.'
  _globals['_CCLOUD_CLIENTLOGUPLOADCHECK_NOTIFICATION']._serialized_start=138
  _globals['_CCLOUD_CLIENTLOGUPLOADCHECK_NOTIFICATION']._serialized_end=199
  _globals['_CCLOUD_CLIENTLOGUPLOADCOMPLETE_NOTIFICATION']._serialized_start=201
  _globals['_CCLOUD_CLIENTLOGUPLOADCOMPLETE_NOTIFICATION']._serialized_end=285
  _globals['_CCLOUD_GETUPLOADSERVERINFO_REQUEST']._serialized_start=287
  _globals['_CCLOUD_GETUPLOADSERVERINFO_REQUEST']._serialized_end=387
  _globals['_CCLOUD_GETUPLOADSERVERINFO_RESPONSE']._serialized_start=389
  _globals['_CCLOUD_GETUPLOADSERVERINFO_RESPONSE']._serialized_end=446
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST']._serialized_start=449
  _globals['_CCLOUD_BEGINHTTPUPLOAD_REQUEST']._serialized_end=1358
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE']._serialized_start=1361
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE']._serialized_end=1897
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE_HTTPHEADERS']._serialized_start=1855
  _globals['_CCLOUD_BEGINHTTPUPLOAD_RESPONSE_HTTPHEADERS']._serialized_end=1897
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST']._serialized_start=1900
  _globals['_CCLOUD_COMMITHTTPUPLOAD_REQUEST']._serialized_end=2457
  _globals['_CCLOUD_COMMITHTTPUPLOAD_RESPONSE']._serialized_start=2459
  _globals['_CCLOUD_COMMITHTTPUPLOAD_RESPONSE']._serialized_end=2584
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST']._serialized_start=2587
  _globals['_CCLOUD_BEGINUGCUPLOAD_REQUEST']._serialized_end=2896
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE']._serialized_start=2899
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE']._serialized_end=3571
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE_HTTPHEADERS']._serialized_start=1855
  _globals['_CCLOUD_BEGINUGCUPLOAD_RESPONSE_HTTPHEADERS']._serialized_end=1897
  _globals['_CCLOUD_COMMITUGCUPLOAD_REQUEST']._serialized_start=3574
  _globals['_CCLOUD_COMMITUGCUPLOAD_REQUEST']._serialized_end=3942
  _globals['_CCLOUD_COMMITUGCUPLOAD_RESPONSE']._serialized_start=3944
  _globals['_CCLOUD_COMMITUGCUPLOAD_RESPONSE']._serialized_end=4068
  _globals['_CCLOUD_GETFILEDETAILS_REQUEST']._serialized_start=4071
  _globals['_CCLOUD_GETFILEDETAILS_REQUEST']._serialized_end=4211
  _globals['_CCLOUD_USERFILE']._serialized_start=4214
  _globals['_CCLOUD_USERFILE']._serialized_end=4612
  _globals['_CCLOUD_GETFILEDETAILS_RESPONSE']._serialized_start=4614
  _globals['_CCLOUD_GETFILEDETAILS_RESPONSE']._serialized_end=4681
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST']._serialized_start=4684
  _globals['_CCLOUD_ENUMERATEUSERFILES_REQUEST']._serialized_end=5173
  _globals['_CCLOUD_ENUMERATEUSERFILES_RESPONSE']._serialized_start=5175
  _globals['_CCLOUD_ENUMERATEUSERFILES_RESPONSE']._serialized_end=5265
  _globals['_CCLOUD_DELETE_REQUEST']._serialized_start=5268
  _globals['_CCLOUD_DELETE_REQUEST']._serialized_end=5448
  _globals['_CCLOUD_DELETE_RESPONSE']._serialized_start=5450
  _globals['_CCLOUD_DELETE_RESPONSE']._serialized_end=5474
  _globals['_CCLOUD_GETCLIENTENCRYPTIONKEY_REQUEST']._serialized_start=5476
  _globals['_CCLOUD_GETCLIENTENCRYPTIONKEY_REQUEST']._serialized_end=5515
  _globals['_CCLOUD_GETCLIENTENCRYPTIONKEY_RESPONSE']._serialized_start=5517
  _globals['_CCLOUD_GETCLIENTENCRYPTIONKEY_RESPONSE']._serialized_end=5627
  _globals['_CCLOUD_CDNREPORT_NOTIFICATION']._serialized_start=5630
  _globals['_CCLOUD_CDNREPORT_NOTIFICATION']._serialized_end=5800
  _globals['_CCLOUD_EXTERNALSTORAGETRANSFERREPORT_NOTIFICATION']._serialized_start=5803
  _globals['_CCLOUD_EXTERNALSTORAGETRANSFERREPORT_NOTIFICATION']._serialized_end=6203
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST']._serialized_start=6206
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_REQUEST']._serialized_end=6632
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_RESPONSE']._serialized_start=6635
  _globals['_CCLOUD_BEGINAPPUPLOADBATCH_RESPONSE']._serialized_end=6767
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_NOTIFICATION']._serialized_start=6770
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_NOTIFICATION']._serialized_end=6955
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_REQUEST']._serialized_start=6958
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_REQUEST']._serialized_end=7138
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_RESPONSE']._serialized_start=7140
  _globals['_CCLOUD_COMPLETEAPPUPLOADBATCH_RESPONSE']._serialized_end=7180
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST']._serialized_start=7183
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_REQUEST']._serialized_end=7969
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS']._serialized_start=7972
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS']._serialized_end=8853
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS_HTTPHEADERS']._serialized_start=1855
  _globals['_CLIENTCLOUDFILEUPLOADBLOCKDETAILS_HTTPHEADERS']._serialized_end=1897
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_RESPONSE']._serialized_start=8856
  _globals['_CCLOUD_CLIENTBEGINFILEUPLOAD_RESPONSE']._serialized_end=9093
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST']._serialized_start=9096
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_REQUEST']._serialized_end=9553
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_RESPONSE']._serialized_start=9556
  _globals['_CCLOUD_CLIENTCOMMITFILEUPLOAD_RESPONSE']._serialized_end=9687
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_REQUEST']._serialized_start=9690
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_REQUEST']._serialized_end=9850
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE']._serialized_start=9853
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE']._serialized_end=10619
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE_HTTPHEADERS']._serialized_start=1855
  _globals['_CCLOUD_CLIENTFILEDOWNLOAD_RESPONSE_HTTPHEADERS']._serialized_end=1897
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST']._serialized_start=10622
  _globals['_CCLOUD_CLIENTDELETEFILE_REQUEST']._serialized_end=10897
  _globals['_CCLOUD_CLIENTDELETEFILE_RESPONSE']._serialized_start=10899
  _globals['_CCLOUD_CLIENTDELETEFILE_RESPONSE']._serialized_end=10933
  _globals['_CCLOUD_CLIENTCONFLICTRESOLUTION_NOTIFICATION']._serialized_start=10936
  _globals['_CCLOUD_CLIENTCONFLICTRESOLUTION_NOTIFICATION']._serialized_end=11160
  _globals['_CCLOUD_ENUMERATEUSERAPPS_REQUEST']._serialized_start=11162
  _globals['_CCLOUD_ENUMERATEUSERAPPS_REQUEST']._serialized_end=11196
  _globals['_CCLOUD_ENUMERATEUSERAPPS_RESPONSE']._serialized_start=11199
  _globals['_CCLOUD_ENUMERATEUSERAPPS_RESPONSE']._serialized_end=11351
  _globals['_CCLOUD_ENUMERATEUSERAPPS_RESPONSE_APPS']._serialized_start=11291
  _globals['_CCLOUD_ENUMERATEUSERAPPS_RESPONSE_APPS']._serialized_end=11351
  _globals['_CCLOUD_GETAPPFILECHANGELIST_REQUEST']._serialized_start=11354
  _globals['_CCLOUD_GETAPPFILECHANGELIST_REQUEST']._serialized_end=11519
  _globals['_CCLOUD_APPFILEINFO']._serialized_start=11522
  _globals['_CCLOUD_APPFILEINFO']._serialized_end=12061
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE']._serialized_start=12064
  _globals['_CCLOUD_GETAPPFILECHANGELIST_RESPONSE']._serialized_end=12609
  _globals['_CCLOUD_APPSESSIONSUSPEND_REQUEST']._serialized_start=12611
  _globals['_CCLOUD_APPSESSIONSUSPEND_REQUEST']._serialized_end=12731
  _globals['_CCLOUD_APPSESSIONSUSPEND_RESPONSE']._serialized_start=12733
  _globals['_CCLOUD_APPSESSIONSUSPEND_RESPONSE']._serialized_end=12768
  _globals['_CCLOUD_APPSESSIONRESUME_REQUEST']._serialized_start=12770
  _globals['_CCLOUD_APPSESSIONRESUME_REQUEST']._serialized_end=12837
  _globals['_CCLOUD_APPSESSIONRESUME_RESPONSE']._serialized_start=12839
  _globals['_CCLOUD_APPSESSIONRESUME_RESPONSE']._serialized_end=12873
  _globals['_CCLOUD_APPLAUNCHINTENT_REQUEST']._serialized_start=12875
  _globals['_CCLOUD_APPLAUNCHINTENT_REQUEST']._serialized_end=12998
  _globals['_CCLOUD_APPLAUNCHINTENT_RESPONSE']._serialized_start=13001
  _globals['_CCLOUD_APPLAUNCHINTENT_RESPONSE']._serialized_end=13155
  _globals['_CCLOUD_APPEXITSYNCDONE_NOTIFICATION']._serialized_start=13157
  _globals['_CCLOUD_APPEXITSYNCDONE_NOTIFICATION']._serialized_end=13281
  _globals['_CCLOUD_CLIENTGETAPPQUOTAUSAGE_REQUEST']._serialized_start=13283
  _globals['_CCLOUD_CLIENTGETAPPQUOTAUSAGE_REQUEST']._serialized_end=13337
  _globals['_CCLOUD_CLIENTGETAPPQUOTAUSAGE_RESPONSE']._serialized_start=13340
  _globals['_CCLOUD_CLIENTGETAPPQUOTAUSAGE_RESPONSE']._serialized_end=13474
  _globals['_CCLOUD_APPCLOUDSTATECHANGE_NOTIFICATION']._serialized_start=13477
  _globals['_CCLOUD_APPCLOUDSTATECHANGE_NOTIFICATION']._serialized_end=13634
  _globals['_CCLOUD_CLIENTLOGUPLOADREQUEST_NOTIFICATION']._serialized_start=13636
  _globals['_CCLOUD_CLIENTLOGUPLOADREQUEST_NOTIFICATION']._serialized_end=13700
  _globals['_CLOUD']._serialized_start=13703
  _globals['_CLOUD']._serialized_end=18196
  _globals['_CLOUDCLIENT']._serialized_start=18199
  _globals['_CLOUDCLIENT']._serialized_end=18543
_builder.BuildServices(DESCRIPTOR, 'steammessages_cloud_pb2', _globals)
# @@protoc_insertion_point(module_scope)
