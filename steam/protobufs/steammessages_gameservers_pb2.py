# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: steammessages_gameservers.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import steam.protobufs.steammessages_base_pb2 as steammessages__base__pb2
import steam.protobufs.steammessages_unified_base_pb2 as steammessages__unified__base__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1fsteammessages_gameservers.proto\x1a\x18steammessages_base.proto\x1a steammessages_unified_base.proto\"\x9f\x01\n\"CGameServers_GetServerList_Request\x12(\n\x06\x66ilter\x18\x01 \x01(\tB\x18\x82\xb5\x18\x14Query filter string.\x12O\n\x05limit\x18\x02 \x01(\r:\x03\x31\x30\x30\x42;\x82\xb5\x18\x37The maximum number of servers to return in the response\"\xe0\x03\n#CGameServers_GetServerList_Response\x12\x65\n\x07servers\x18\x01 \x03(\x0b\x32+.CGameServers_GetServerList_Response.ServerB\'\x82\xb5\x18#List of servers matching the filter\x1a\xd1\x02\n\x06Server\x12\x30\n\x04\x61\x64\x64r\x18\x01 \x01(\tB\"\x82\xb5\x18\x1eThe server\'s IP and query port\x12\x10\n\x08gameport\x18\x02 \x01(\r\x12\x10\n\x08specport\x18\x03 \x01(\r\x12\x0f\n\x07steamid\x18\x04 \x01(\x06\x12\x0c\n\x04name\x18\x05 \x01(\t\x12\r\n\x05\x61ppid\x18\x06 \x01(\r\x12\x0f\n\x07gamedir\x18\x07 \x01(\t\x12\x0f\n\x07version\x18\x08 \x01(\t\x12\x0f\n\x07product\x18\t \x01(\t\x12\x0e\n\x06region\x18\n \x01(\x05\x12\x0f\n\x07players\x18\x0b \x01(\x05\x12\x13\n\x0bmax_players\x18\x0c \x01(\x05\x12\x0c\n\x04\x62ots\x18\r \x01(\x05\x12\x0b\n\x03map\x18\x0e \x01(\t\x12\x0e\n\x06secure\x18\x0f \x01(\x08\x12\x11\n\tdedicated\x18\x10 \x01(\x08\x12\n\n\x02os\x18\x11 \x01(\t\x12\x10\n\x08gametype\x18\x12 \x01(\t\"@\n*CGameServers_GetServerSteamIDsByIP_Request\x12\x12\n\nserver_ips\x18\x01 \x03(\t\"\x90\x01\n%CGameServers_IPsWithSteamIDs_Response\x12>\n\x07servers\x18\x01 \x03(\x0b\x32-.CGameServers_IPsWithSteamIDs_Response.Server\x1a\'\n\x06Server\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x01(\t\x12\x0f\n\x07steamid\x18\x02 \x01(\x06\"E\n*CGameServers_GetServerIPsBySteamID_Request\x12\x17\n\x0fserver_steamids\x18\x01 \x03(\x06\"\x97\x03\n\"CGameServers_QueryByFakeIP_Request\x12/\n\x07\x66\x61ke_ip\x18\x01 \x01(\rB\x1e\x82\xb5\x18\x1a\x46\x61keIP of server to query.\x12\x34\n\tfake_port\x18\x02 \x01(\rB!\x82\xb5\x18\x1d\x46\x61ke port of server to query.\x12I\n\x06\x61pp_id\x18\x03 \x01(\rB9\x82\xb5\x18\x35\x41ppID to use.  Each AppID has its own FakeIP address.\x12j\n\nquery_type\x18\x04 \x01(\x0e\x32..CGameServers_QueryByFakeIP_Request.EQueryType:\rQuery_InvalidB\x17\x82\xb5\x18\x13What type of query?\"S\n\nEQueryType\x12\x11\n\rQuery_Invalid\x10\x00\x12\x0e\n\nQuery_Ping\x10\x01\x12\x11\n\rQuery_Players\x10\x02\x12\x0f\n\x0bQuery_Rules\x10\x03\"\xd0\x03\n\x1b\x43MsgGameServerPingQueryData\x12!\n\tserver_ip\x18\x01 \x01(\x0b\x32\x0e.CMsgIPAddress\x12\x12\n\nquery_port\x18\x02 \x01(\r\x12\x11\n\tgame_port\x18\x03 \x01(\r\x12\x16\n\x0espectator_port\x18\x04 \x01(\r\x12\x1d\n\x15spectator_server_name\x18\x05 \x01(\t\x12\x13\n\x0bserver_name\x18\x06 \x01(\t\x12\x0f\n\x07steamid\x18\x07 \x01(\x06\x12\x0e\n\x06\x61pp_id\x18\x08 \x01(\r\x12\x0f\n\x07gamedir\x18\t \x01(\t\x12\x0b\n\x03map\x18\n \x01(\t\x12\x18\n\x10game_description\x18\x0b \x01(\t\x12\x10\n\x08gametype\x18\x0c \x01(\t\x12\x13\n\x0bnum_players\x18\r \x01(\r\x12\x13\n\x0bmax_players\x18\x0e \x01(\r\x12\x10\n\x08num_bots\x18\x0f \x01(\r\x12\x10\n\x08password\x18\x10 \x01(\x08\x12\x0e\n\x06secure\x18\x11 \x01(\x08\x12\x11\n\tdedicated\x18\x12 \x01(\x08\x12\x0f\n\x07version\x18\x13 \x01(\t\x12\x11\n\tsdr_popid\x18\x14 \x01(\x07\x12\x1b\n\x13sdr_location_string\x18\x15 \x01(\t\"\x95\x01\n\x1e\x43MsgGameServerPlayersQueryData\x12\x37\n\x07players\x18\x01 \x03(\x0b\x32&.CMsgGameServerPlayersQueryData.Player\x1a:\n\x06Player\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05score\x18\x02 \x01(\r\x12\x13\n\x0btime_played\x18\x03 \x01(\r\"v\n\x1c\x43MsgGameServerRulesQueryData\x12\x31\n\x05rules\x18\x01 \x03(\x0b\x32\".CMsgGameServerRulesQueryData.Rule\x1a#\n\x04Rule\x12\x0c\n\x04rule\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xc2\x01\n%CGameServers_GameServerQuery_Response\x12/\n\tping_data\x18\x01 \x01(\x0b\x32\x1c.CMsgGameServerPingQueryData\x12\x35\n\x0cplayers_data\x18\x02 \x01(\x0b\x32\x1f.CMsgGameServerPlayersQueryData\x12\x31\n\nrules_data\x18\x03 \x01(\x0b\x32\x1d.CMsgGameServerRulesQueryData\"*\n(GameServerClient_QueryServerData_Request\"\xc6\x01\n)GameServerClient_QueryServerData_Response\x12/\n\tping_data\x18\x01 \x01(\x0b\x32\x1c.CMsgGameServerPingQueryData\x12\x35\n\x0cplayers_data\x18\x02 \x01(\x0b\x32\x1f.CMsgGameServerPlayersQueryData\x12\x31\n\nrules_data\x18\x03 \x01(\x0b\x32\x1d.CMsgGameServerRulesQueryData2\xbe\x05\n\x0bGameServers\x12\x8c\x01\n\rGetServerList\x12#.CGameServers_GetServerList_Request\x1a$.CGameServers_GetServerList_Response\"0\x82\xb5\x18,Gets a list of servers given a filter string\x12\xa4\x01\n\x15GetServerSteamIDsByIP\x12+.CGameServers_GetServerSteamIDsByIP_Request\x1a&.CGameServers_IPsWithSteamIDs_Response\"6\x82\xb5\x18\x32Gets a list of server SteamIDs given a list of IPs\x12\xad\x01\n\x15GetServerIPsBySteamID\x12+.CGameServers_GetServerIPsBySteamID_Request\x1a&.CGameServers_IPsWithSteamIDs_Response\"?\x82\xb5\x18;Gets a list of server IP addresses given a list of SteamIDs\x12\x90\x01\n\rQueryByFakeIP\x12#.CGameServers_QueryByFakeIP_Request\x1a&.CGameServers_GameServerQuery_Response\"2\x82\xb5\x18.Perform a query on a specific server by FakeIP\x1a\x36\x82\xb5\x18\x32\x41 service for searching and managing game servers.2\xe9\x01\n\x10GameServerClient\x12\x97\x01\n\x0fQueryServerData\x12).GameServerClient_QueryServerData_Request\x1a*.GameServerClient_QueryServerData_Response\"-\x82\xb5\x18)Steam is asking a gameserver for its data\x1a;\x82\xb5\x18\x33Service methods exposed by GameServer Steam clients\xc0\xb5\x18\x02\x42\x03\x90\x01\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'steammessages_gameservers_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\220\001\001'
  _globals['_CGAMESERVERS_GETSERVERLIST_REQUEST'].fields_by_name['filter']._loaded_options = None
  _globals['_CGAMESERVERS_GETSERVERLIST_REQUEST'].fields_by_name['filter']._serialized_options = b'\202\265\030\024Query filter string.'
  _globals['_CGAMESERVERS_GETSERVERLIST_REQUEST'].fields_by_name['limit']._loaded_options = None
  _globals['_CGAMESERVERS_GETSERVERLIST_REQUEST'].fields_by_name['limit']._serialized_options = b'\202\265\0307The maximum number of servers to return in the response'
  _globals['_CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER'].fields_by_name['addr']._loaded_options = None
  _globals['_CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER'].fields_by_name['addr']._serialized_options = b'\202\265\030\036The server\'s IP and query port'
  _globals['_CGAMESERVERS_GETSERVERLIST_RESPONSE'].fields_by_name['servers']._loaded_options = None
  _globals['_CGAMESERVERS_GETSERVERLIST_RESPONSE'].fields_by_name['servers']._serialized_options = b'\202\265\030#List of servers matching the filter'
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST'].fields_by_name['fake_ip']._loaded_options = None
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST'].fields_by_name['fake_ip']._serialized_options = b'\202\265\030\032FakeIP of server to query.'
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST'].fields_by_name['fake_port']._loaded_options = None
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST'].fields_by_name['fake_port']._serialized_options = b'\202\265\030\035Fake port of server to query.'
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST'].fields_by_name['app_id']._loaded_options = None
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST'].fields_by_name['app_id']._serialized_options = b'\202\265\0305AppID to use.  Each AppID has its own FakeIP address.'
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST'].fields_by_name['query_type']._loaded_options = None
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST'].fields_by_name['query_type']._serialized_options = b'\202\265\030\023What type of query?'
  _globals['_GAMESERVERS']._loaded_options = None
  _globals['_GAMESERVERS']._serialized_options = b'\202\265\0302A service for searching and managing game servers.'
  _globals['_GAMESERVERS'].methods_by_name['GetServerList']._loaded_options = None
  _globals['_GAMESERVERS'].methods_by_name['GetServerList']._serialized_options = b'\202\265\030,Gets a list of servers given a filter string'
  _globals['_GAMESERVERS'].methods_by_name['GetServerSteamIDsByIP']._loaded_options = None
  _globals['_GAMESERVERS'].methods_by_name['GetServerSteamIDsByIP']._serialized_options = b'\202\265\0302Gets a list of server SteamIDs given a list of IPs'
  _globals['_GAMESERVERS'].methods_by_name['GetServerIPsBySteamID']._loaded_options = None
  _globals['_GAMESERVERS'].methods_by_name['GetServerIPsBySteamID']._serialized_options = b'\202\265\030;Gets a list of server IP addresses given a list of SteamIDs'
  _globals['_GAMESERVERS'].methods_by_name['QueryByFakeIP']._loaded_options = None
  _globals['_GAMESERVERS'].methods_by_name['QueryByFakeIP']._serialized_options = b'\202\265\030.Perform a query on a specific server by FakeIP'
  _globals['_GAMESERVERCLIENT']._loaded_options = None
  _globals['_GAMESERVERCLIENT']._serialized_options = b'\202\265\0303Service methods exposed by GameServer Steam clients\300\265\030\002'
  _globals['_GAMESERVERCLIENT'].methods_by_name['QueryServerData']._loaded_options = None
  _globals['_GAMESERVERCLIENT'].methods_by_name['QueryServerData']._serialized_options = b'\202\265\030)Steam is asking a gameserver for its data'
  _globals['_CGAMESERVERS_GETSERVERLIST_REQUEST']._serialized_start=96
  _globals['_CGAMESERVERS_GETSERVERLIST_REQUEST']._serialized_end=255
  _globals['_CGAMESERVERS_GETSERVERLIST_RESPONSE']._serialized_start=258
  _globals['_CGAMESERVERS_GETSERVERLIST_RESPONSE']._serialized_end=738
  _globals['_CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER']._serialized_start=401
  _globals['_CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER']._serialized_end=738
  _globals['_CGAMESERVERS_GETSERVERSTEAMIDSBYIP_REQUEST']._serialized_start=740
  _globals['_CGAMESERVERS_GETSERVERSTEAMIDSBYIP_REQUEST']._serialized_end=804
  _globals['_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE']._serialized_start=807
  _globals['_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE']._serialized_end=951
  _globals['_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE_SERVER']._serialized_start=912
  _globals['_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE_SERVER']._serialized_end=951
  _globals['_CGAMESERVERS_GETSERVERIPSBYSTEAMID_REQUEST']._serialized_start=953
  _globals['_CGAMESERVERS_GETSERVERIPSBYSTEAMID_REQUEST']._serialized_end=1022
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST']._serialized_start=1025
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST']._serialized_end=1432
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST_EQUERYTYPE']._serialized_start=1349
  _globals['_CGAMESERVERS_QUERYBYFAKEIP_REQUEST_EQUERYTYPE']._serialized_end=1432
  _globals['_CMSGGAMESERVERPINGQUERYDATA']._serialized_start=1435
  _globals['_CMSGGAMESERVERPINGQUERYDATA']._serialized_end=1899
  _globals['_CMSGGAMESERVERPLAYERSQUERYDATA']._serialized_start=1902
  _globals['_CMSGGAMESERVERPLAYERSQUERYDATA']._serialized_end=2051
  _globals['_CMSGGAMESERVERPLAYERSQUERYDATA_PLAYER']._serialized_start=1993
  _globals['_CMSGGAMESERVERPLAYERSQUERYDATA_PLAYER']._serialized_end=2051
  _globals['_CMSGGAMESERVERRULESQUERYDATA']._serialized_start=2053
  _globals['_CMSGGAMESERVERRULESQUERYDATA']._serialized_end=2171
  _globals['_CMSGGAMESERVERRULESQUERYDATA_RULE']._serialized_start=2136
  _globals['_CMSGGAMESERVERRULESQUERYDATA_RULE']._serialized_end=2171
  _globals['_CGAMESERVERS_GAMESERVERQUERY_RESPONSE']._serialized_start=2174
  _globals['_CGAMESERVERS_GAMESERVERQUERY_RESPONSE']._serialized_end=2368
  _globals['_GAMESERVERCLIENT_QUERYSERVERDATA_REQUEST']._serialized_start=2370
  _globals['_GAMESERVERCLIENT_QUERYSERVERDATA_REQUEST']._serialized_end=2412
  _globals['_GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE']._serialized_start=2415
  _globals['_GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE']._serialized_end=2613
  _globals['_GAMESERVERS']._serialized_start=2616
  _globals['_GAMESERVERS']._serialized_end=3318
  _globals['_GAMESERVERCLIENT']._serialized_start=3321
  _globals['_GAMESERVERCLIENT']._serialized_end=3554
_builder.BuildServices(DESCRIPTOR, 'steammessages_gameservers_pb2', _globals)
# @@protoc_insertion_point(module_scope)
